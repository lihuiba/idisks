#!/usr/bin/python

import sys, os, os.path
from tgtadm import tgtadm
from utils import *


argc=len(sys.argv)
if argc>=2 and (sys.argv[1]=='-h' or sys.argv[1]=='--help'):
	print "Usage:\n{0} [node] [disk] [directory]\n"
	sys.exit(0)

pnode = argc>=2 and sys.argv[1] or '*'
pdisk = argc>=3 and sys.argv[2] or '*'
pdir = argc>=4 and sys.argv[4] or os.path.join(mydir(), 'targets.d')

if not os.path.isdir(pdir):
	print "config directory NOT exists: '{0}'".format(pdir)
	sys.exit(1)


tgt=tgtadm()

def process_node(node):
	print "Node: '{0}'".format(node)
	target = tgt.lookup_target_by_node(node)
	if not target:
		print "  creating a target"
		target = tgt.create_target(node)
	disks = listdisks()
	if len(disks)==0:
		print "  no disk found"
	for i in range(len(disks)):
		disk = disks[i]
		if not fnmatch.fnmatch(disk, pdisk): continue
		diskpath = os.readlink(disk)
	 	# print "  applying node '{0}', disk '{1}' ({2})".format(node, disk, diskpath)
		lid = i+1
		lun = target.get(lid)
		if not lun:
			print "  creating lun {0} for disk '{1}'".format(lid, disk)
			tgt.create_lun(target, lid, diskpath)
			continue
		if os.path.realpath(lun['store']) == os.path.realpath(diskpath): 
			print "  keeping lun {0} for disk '{1}' unchanged".format(lid, disk)
			continue
		print "  deleting lun {0}".format(lid)
		tgt.delete_lun(target, lid)
		print "  creating lun {0} for disk '{1}'".format(lid, disk)
		tgt.create_lun(target, lid, diskpath)
	
	moreluns = tgt.get_luns(target)
	moreluns = [x for x in moreluns if x>lid]
	for lid in moreluns:
		print "  deleting unused lun {0}".format(lid)
		tgt.delete_lun(target, lid)	


os.chdir(pdir)
# print "switch directory to '{0}'".format(pdir)
for node in listnodes(pnode):
	os.chdir(node)
	try:
		process_node(node)
	except:
		import traceback 
		traceback.print_exc()	
	os.chdir('..')


